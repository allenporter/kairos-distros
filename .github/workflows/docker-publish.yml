name: Docker

on:
  schedule:
    - cron: '42 2 * * *'
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_BASE: ${{ github.repository_owner }}

jobs:
  build:
    strategy:
      matrix:
        variant:
        - ubuntu-intel-nuc
        - ubuntu-nvidia

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download AuroraBoot
        run: |
          curl -OL ${{ env.DOWNLOAD_URL }}/v${{ env.AURORABOOT_VERSION }}/AuroraBoot_${{ env.AURORABOOT_VERSION }}_linux_amd64.tar.gz
          tar -xzf AuroraBoot_${{ env.AURORABOOT_VERSION }}_linux_amd64.tar.gz
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.3.0
        with:
          cosign-release: 'v2.1.1'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.4.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_BASE }}/kairos-${{ matrix.variant }}
      - name: Build Docker image and export
        id: build-image
        uses: docker/build-push-action@v5.1.0
        with:
          context: ${{ matrix.variant }}
          load: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_BASE }}/kairos-${{ matrix.variant }}:test
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build iso from the container image
        id: build-iso
        uses: docker://quay.io/kairos/auroraboot:v0.2.7
        options: -v /var/run/docker.sock:/var/run/docker.sock
        with:
          args: >-
            --set "container_image=docker://${{ env.IMAGE_BASE }}/kairos-${{ matrix.variant }}:test
            --set "disable_http_server=true"
            --set "disable_netboot=true"
            --set "state_dir=/github/workspace"
            --debug
      - name: Push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5.1.0
        with:
          context: ${{ matrix.variant }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
      - name: Publish iso
        uses: actions/upload-artifact@v2
        id: publish-iso
        if: ${{ github.event_name != 'pull_request' }}
        with:
          name: kairos-${{ matrix.variant }}-${{ steps.meta.outputs.version }}.iso
          path: ${{ github.workspace }}/build/kairos.iso.custom.iso
